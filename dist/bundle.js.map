{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/globals.js","webpack:///./src/sound.js","webpack:///./src/window.js","webpack:///./src/blob.js","webpack:///./src/keycodes.js","webpack:///./src/game.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","window","GLOBALS","blobs","windowSize","horizontal","vertical","keyState","left","right","down","up","gameState","gravity","repulsion","drag","borderBounce","borderTeleport","player","pairwiseForceStrength","viewDistance","initialSize","initialPos","speedUp","diagonal","Math","sqrt","maxPop","appetite","G","R","minSize","borderElasticity","fps","audioDepth","sounds","soundIndex","push","Audio","getGameWindow","document","getElementById","blob_pairwiseForceStrength","blob_Blob","[object Object]","radius","position","velocity","isPlayer","pairwiseForce","this","mass","pow","force","moving","blobDiv","createElement","classList","add","appendChild","id","move","viscosity","accelerate","teleport","updateDiv","random","newRandomDirection","toggleMoving","angle","PI","power","cos","sin","style","bottom","height","width","abs","adjustment","parentNode","removeChild","other","playerEats","weighting","newPosition","newVelocity","newRadius","deleteDiv","play","opac","opacity","a","b","fromCentre","centre","distance","getDistance","magnitude","forceTermHorizontal","forceTermVertical","keycodes","game_windowSize","game_keyState","game_gameState","toggleInstructions","toggle","playerDeath","forEach","blob","setOpacity","addBlob","pos","x","entryPoint","getRandomBorderPosition","vel","newblob","iteration","length","updateMovement","newBlobs","blobWander","biggerThan","currentForce","getForce","consume","setForce","max","pairwiseInteraction","j","updateWindowSize","windowDimensions","getBoundingClientRect","keyDown","e","keyCode","updatePlayerForce","keyUp","totalMomentum","totalCOM","totalMass","allBlobs","concat","currentMass","getMass","currentVelocity","getVel","currentPosition","getPos","velocityShift","positionShift","adjustVelocityBy","adjustPositionBy","zeroTotalMomentumAndPosition","keyPress","onload","addEventListener","setInterval"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","window.GLOBALS = {\n  blobs: [],\n  windowSize: {\n    horizontal: 0,\n    vertical: 0\n  },\n  keyState: {\n    left: false,\n    right: false,\n    down: false,\n    up: false,\n  },\n  gameState: {\n    gravity: false,\n    repulsion: false,\n    drag: true,\n    borderBounce: true,\n    borderTeleport: false,\n  },\n  player: null,\n  pairwiseForceStrength: 1,\n  viewDistance: 200,\n  initialSize: 14,\n  initialPos: [50, 50],\n  speedUp: 0.5,\n  diagonal: 1.0 / Math.sqrt(2),\n  maxPop: 10,\n  drag: 0.004,\n  appetite: 0.0005,\n  G: 0.5,\n  R: -0.5,\n  minSize: 10,\n  borderElasticity: 0.005,\n  fps: 50\n}\n","const audioDepth = 5;\nlet sounds = [],\n    soundIndex = 0;\n\nfor (let i = 0; i < audioDepth; i++) {\n  sounds.push(new Audio(\"sounds/bubble_pop.mp3\"))\n}\n\n// when blobs collide play this sound\nexport function playSound() {\n  soundIndex = (soundIndex+1)%audioDepth;\n  sounds[soundIndex].play();\n}\n","export function getGameWindow() {\n  return document.getElementById('game-display');\n}","import { playSound } from './sound'\nimport { getGameWindow } from './window'\n\nlet {\n  windowSize,\n  keyState,\n  gameState,\n  pairwiseForceStrength,\n  speedUp,\n  diagonal,\n  drag,\n  appetite,\n  G,\n  R,\n  minSize,\n  borderElasticity\n} = window.GLOBALS\n\nexport default class Blob {\n  constructor(radius, position, velocity = [0, 0], isPlayer = false, pairwiseForce = [0, 0]) {\n    this.radius = radius;\n    this.mass = Math.pow(radius, 3);\n    this.position = position;\n    this.velocity = velocity;\n    this.force = [0, 0];\n    this.isPlayer = isPlayer;\n    this.pairwiseForce = pairwiseForce;\n\n    // non player blob only\n    this.moving = false;\n\n    // creates a corresponding div to display on screen\n    this.blobDiv = document.createElement('div');\n    this.blobDiv.classList.add('blob');\n    getGameWindow().appendChild(this.blobDiv);\n\n    // sets the div id for player styling\n    if (isPlayer) {\n      this.blobDiv.id = 'player';\n    }\n  }\n\n  // this master call contains all the things that need to happen to each blob each iteration\n  updateMovement() {\n    this.move();\n    if (gameState.drag) this.viscosity();\n    // this.hunger();\n    this.accelerate();\n    if (gameState.borderTeleport) this.teleport();\n    if (gameState.borderBounce) this.borderBounce();\n    this.updateDiv();\n    // since the pairwise force is recalculated each iteration it needs to be rezeroed each time.\n    if (gameState.gravity || gameState.repulsion) this.pairwiseForce = [0, 0];\n  }\n\n  // based on the current state of arrow keys, set the force of the player\n  updatePlayerForce() {\n    if (keyState.up) {\n      if (keyState.left) {\n        //up and left\n        this.force = [-diagonal, diagonal];\n      } else if (keyState.right) {\n        // up and right\n        this.force = [diagonal, diagonal];\n      } else {\n        // straight up\n        this.force = [0, 1];\n      }\n    } else if (keyState.down) {\n      if (keyState.left) {\n        // down and left\n        this.force = [-diagonal, -diagonal];\n      } else if (keyState.right) {\n        // down and right\n        this.force = [diagonal, -diagonal];\n      } else {\n        // straight down\n        this.force = [0, -1];\n      }\n    } else if (keyState.right) {\n      // right\n      this.force = [1, 0];\n    } else if (keyState.left) {\n      // left\n      this.force = [-1, 0];\n    } else {\n      this.force = [0, 0]\n    }\n  }\n\n  // this function creates the random blob movement\n  blobWander() {\n    // if the blob is moving it has a chance of changing direction\n    if (this.moving && Math.random() > 0.95) {\n      this.newRandomDirection();\n    }\n    // it also has a chance to start or stop moving\n    if (Math.random() > 0.993) {\n      this.toggleMoving();\n    }\n  }\n\n  newRandomDirection() {\n    let angle = Math.random() * 2 * Math.PI;\n    let power = Math.random();\n    this.force[0] = Math.cos(angle) * power;\n    this.force[1] = Math.sin(angle) * power;\n  }\n\n  toggleMoving() {\n    this.moving = !(this.moving);\n  }\n\n  // definitely unnecessary but I'll levae in case\n  getAbsVel() {\n    return Math.sqrt(Math.pow(this.velocity[0], 2) + Math.pow(this.velocity[1], 2));\n  }\n\n  // update the div position and size, this is what effectively links the javascript object to the DOM\n  updateDiv() {\n    this.blobDiv.style.left = (this.position[0] - this.radius) + 'px';\n    this.blobDiv.style.bottom = (this.position[1] - this.radius) + 'px';\n    this.blobDiv.style.height = this.radius * 2 + 'px';\n    this.blobDiv.style.width = this.radius * 2 + 'px';\n  }\n\n  // This function updates the blobs position from it's current speed and position \n  move() {\n    this.position[0] += this.velocity[0];\n    this.position[1] += this.velocity[1];\n  }\n\n  // This function decellerates the as a function of its radius and velocity, this means bigger blobs are slower\n  viscosity() {\n    // this.velocity[0] *= (1-drag*Math.sqrt(this.radius)*Math.pow(this.velocity[0],2));\n    // this.velocity[1] *= (1-drag*Math.sqrt(this.radius)*Math.pow(this.velocity[1],2));\n    this.velocity[0] *= (1 - drag * Math.sqrt(this.radius) * Math.abs(this.velocity[0]));\n    this.velocity[1] *= (1 - drag * Math.sqrt(this.radius) * Math.abs(this.velocity[1]));\n  }\n\n  // gradually shrinks blob as long as it is above a minimum size\n  hunger() {\n    if (this.radius > minSize) {\n      this.radius *= (1 - appetite);\n    }\n  }\n\n  // these functions are necessary because this isn't quite a regular object but a 'class', this means\n  // that from the global context blob properties can't be set manually (blob[0].radius = x), they \n  // have to be asked politely for information and be asked to change\n  getRadius() {\n    return this.radius;\n  }\n  getMass() {\n    return this.mass;\n  }\n  getVel() {\n    return this.velocity;\n  }\n  getPos() {\n    return this.position;\n  }\n  getForce() {\n    return this.force;\n  }\n  setForce(force) {\n    this.force = force;\n  }\n  adjustVelocityBy(adjustment) {\n    this.velocity[0] += adjustment[0];\n    this.velocity[1] += adjustment[1];\n  }\n  adjustPositionBy(adjustment) {\n    this.position[0] += adjustment[0];\n    this.position[1] += adjustment[1];\n  }\n\n  // accelerate the blob\n  accelerate() {\n    // this component is the blobs own movement, player or otherwise\n    if (gameState.drag) {\n      this.velocity[0] += speedUp * this.force[0];\n      this.velocity[1] += speedUp * this.force[1];\n    }\n    // this is the effect of pairwise forces on the blob\n    if (gameState.gravity || gameState.repulsion) {\n      this.velocity[0] += this.pairwiseForce[0] / this.mass;\n      this.velocity[1] += this.pairwiseForce[1] / this.mass;\n    }\n  }\n\n  // this function handles what happens when a blob nears the edge of screen\n  borderBounce() {\n    // if the blob is off the left hand side of the screen\n    if (this.position[0] < -this.radius) {\n      // apply force proportional to it's distance off screen\n      this.velocity[0] -= borderElasticity * (this.position[0] + this.radius);\n      // and vice versa\n    } else if (this.position[0] > this.radius + windowSize.horizontal) {\n      this.velocity[0] -= borderElasticity * (this.position[0] - this.radius - windowSize.horizontal);\n    }\n\n    // same for vertical\n    if (this.position[1] < -this.radius) {\n      this.velocity[1] -= borderElasticity * (this.position[1] + this.radius);\n    } else if (this.position[1] > this.radius + windowSize.vertical) {\n      this.velocity[1] -= borderElasticity * (this.position[1] - this.radius - windowSize.vertical);\n    }\n  }\n\n  // When a blob leaves the screen, teleport it to the other side.\n  teleport() {\n    this.position[0] = ((this.position[0] + windowSize.horizontal) % (windowSize.horizontal));\n    this.position[1] = ((this.position[1] + windowSize.vertical) % (windowSize.vertical));\n  }\n\n  deleteDiv() {\n    this.blobDiv.parentNode.removeChild(this.blobDiv);\n  }\n\n  biggerThan(other) {\n    return (this.radius >= other.radius);\n  }\n\n  // given two blobs, this function returns a single blob such that mass, centre of mass and momentum are conserved\n  consume(other, playerEats = false) {\n    // relative mass\n    const weighting = Math.pow(other.radius, 3) / (Math.pow(this.radius, 3) + Math.pow(other.radius, 3));\n    // calculates centre of mass of both blobs\n    let newPosition = [\n      this.position[0] + (other.position[0] - this.position[0]) * weighting,\n      this.position[1] + (other.position[1] - this.position[1]) * weighting\n    ];\n    // calculates velocity based on total momentum\n    let newVelocity = [\n      this.velocity[0] + (other.velocity[0] - this.velocity[0]) * weighting,\n      this.velocity[1] + (other.velocity[1] - this.velocity[1]) * weighting\n    ];\n\n    // new size that conserves mass|volume\n    let newRadius = Math.pow((Math.pow(this.radius, 3) + Math.pow(other.radius, 3)), 1 / 3);\n\n    // removes old divs from html\n    other.deleteDiv();\n    this.deleteDiv();\n\n    playSound();\n\n    // returns new Blob\n    return new Blob(\n      newRadius,\n      newPosition,\n      newVelocity,\n      playerEats\n    );\n  }\n\n  setOpacity(opac) {\n    this.blobDiv.style.opacity = opac;\n  }\n\n  // This function checks how far apart two blobs are, either their surfaces or their centres\n  static getDistance(a, b, fromCentre) {\n    const centre = Math.sqrt(\n      Math.pow((a.position[0] - b.position[0]), 2) +\n      Math.pow((a.position[1] - b.position[1]), 2)\n    );\n    return (fromCentre) \n      ? centre\n      : (centre - (a.radius + b.radius));\n  }\n\n  // deal with all pairwise interactions between blobs, assumes player will be passed first if at all (player)\n  static pairwiseInteraction(a, b) {\n    // gravity and repulsion interaction\n    if (gameState.gravity || gameState.repulsion) {\n      const distance = Blob.getDistance(a, b, true)\n      let magnitude = pairwiseForceStrength * a.mass * b.mass / Math.pow(distance, 2);\n\n      magnitude *= (gameState.gravity ? G : R)\n\n      const forceTermHorizontal = magnitude * (a.position[0] - b.position[0]) / distance,\n            forceTermVertical = magnitude * (a.position[1] - b.position[1]) / distance;\n\n      a.pairwiseForce[0] -= forceTermHorizontal;\n      a.pairwiseForce[1] -= forceTermVertical;\n      b.pairwiseForce[0] += forceTermHorizontal\n      b.pairwiseForce[1] += forceTermVertical;\n    }\n  }\n}","export default {\n    left: 37,\n    up: 38,\n    right: 39,\n    down: 40,\n    g: 71,\n    r: 82,\n    f: 70,\n    t: 84,\n    b: 66,\n    z: 90,\n    a: 65,\n    space: 32\n}","import Blob from './blob'\nimport { getGameWindow } from './window'\nimport keys from './keycodes'\n\nlet {\n  blobs,\n  windowSize,\n  keyState,\n  gameState,\n  player,\n  viewDistance,\n  initialSize,\n  initialPos,\n  maxPop,\n  fps\n} = window.GLOBALS\n\nexport default function start() {\n  updateWindowSize();\n\n  document.addEventListener('keydown', keyDown, false);\n  document.addEventListener('keyup', keyUp, false);\n  document.addEventListener('keypress', keyPress, false);\n\n  window.addEventListener('resize', updateWindowSize, false);\n\n  toggleInstructions();\n\n  setInterval(iteration, 1000 / fps)\n};\n\nfunction createPlayer() {\n  player = new Blob(\n    initialSize,\n    [...initialPos],\n    [0, 0],\n    true\n  );\n}\n\nfunction toggleInstructions() {\n  document.getElementById('instructions').classList.toggle('hidden');\n}\n\nwindow.iteration = function() {\n  repopulate();\n\n  if (player) {\n    player.updateMovement();\n    viewDistance = initialSize * 10 + player.radius * 5;\n  }\n\n  // Each time the array is iterated through a new array is created,\n  // This is because when I tried to use array.filter the resultant array was still the same length and contained nulls\n  let newBlobs = [];\n\n  for (let i = 0; i < blobs.length; i++) {\n    if (!blobs[i]) continue;\n\n    blobs[i].blobWander();\n    blobs[i].updateMovement();\n\n    if (player) {\n      let distance = Blob.getDistance(blobs[i], player, false);\n      if (distance < 0) {\n        if (player.biggerThan(blobs[i])) {\n          const currentForce = player.getForce();\n          player = player.consume(blobs[i], true);\n          player.setForce(currentForce);\n          blobs[i] = null;\n          continue;\n        } else {\n          blobs[i] = blobs[i].consume(player);\n          playerDeath();\n        }\n      } else {\n        // apply opacity to the blob so that it gradually comes into view only near the player\n        blobs[i].setOpacity(Math.max(1 - (distance / viewDistance), 0));\n        Blob.pairwiseInteraction(player, blobs[i]);\n      }\n    }\n\n    for (let j = i + 1; j < blobs.length; j++) {\n      if (!blobs[j]) continue;\n      if (Blob.getDistance(blobs[i], blobs[j], false) < 0) {\n        blobs[i] = (blobs[i].biggerThan(blobs[j])) \n          ? blobs[i].consume(blobs[j]) \n          : blobs[j].consume(blobs[i]);\n        blobs[j] = null;\n      } else {\n        Blob.pairwiseInteraction(blobs[i], blobs[j]);\n      }\n    }\n    newBlobs.push(blobs[i]);\n  }\n\n  blobs = newBlobs;\n}\n\nfunction playerDeath() {\n  player = null;\n  toggleInstructions();\n  revealAll();\n}\n\nfunction revealAll() {\n  blobs.forEach(blob => {\n    blob.setOpacity(1);\n  })\n}\n\nfunction repopulate() {\n  if (blobs.length < maxPop && Math.random() > 0.99) addBlob();\n}\n\nfunction addBlob(radius = getCreationRadius(), pos = getRandomBorderPosition(), vel = getRandomStartingVelocity()) {\n  let newblob = new Blob(\n    radius,\n    pos,\n    vel,\n    false\n  );\n  blobs.push(newblob);\n}\n\nfunction getRandomBorderPosition() {\n  const x = Math.random() * 4;\n  return (x < 1) ? entryPoint = [0, windowSize.vertical * x] :\n    (x < 2) ? [windowSize.horizontal * (x - 1), 0] :\n    (x < 3) ? [windowSize.horizontal, windowSize.vertical * (x - 2)] :\n    [windowSize.horizontal * (x - 3), 0]\n}\n\nfunction getRandomStartingVelocity() {\n  return [Math.random() * 4 - 2, Math.random() * 4 - 2];\n}\n\nfunction getCreationRadius() {\n  return 0.8 * initialSize * Math.pow(5, Math.pow(Math.random(), 2));\n}\n\nwindow.updateWindowSize = function () {\n  let windowDimensions = getGameWindow().getBoundingClientRect();\n  windowSize.horizontal = windowDimensions.width;\n  windowSize.vertical = windowDimensions.height;\n  initialPos = [windowSize.horizontal / 2, windowSize.vertical / 2];\n}\n\nwindow.keyDown = function (e) {\n  switch (e.keyCode) {\n    case keys.up:\n      keyState.up = true; break;\n    case keys.down:\n      keyState.down = true; break;\n    case keys.left:\n      keyState.left = true; break;\n    case keys.right:\n      keyState.right = true; break;\n    case keys.g:\n      gameState.gravity = true;\n      gameState.repulsion = false; break;\n    case keys.r:\n      gameState.gravity = false;\n      gameState.repulsion = true; break;\n    case keys.f:\n      gameState.drag = false; break;\n    default: \n  }\n  if (player) player.updatePlayerForce();\n}\n\nwindow.keyUp = function (e) {\n  switch (e.keyCode) {\n    case keys.right:\n      keyState.right = false; break;\n    case keys.left:\n      keyState.left = false; break;\n    case keys.up:\n      keyState.up = false; break;\n    case keys.down:\n      keyState.down = false; break;\n    case keys.g:\n      gameState.gravity = false;\n      pairwiseForceStrength = 0; break;\n    case keys.r:\n      gameState.repulsion = false;\n      pairwiseForceStrength = 0; break;\n    case keys.f:\n      gameState.drag = true; break;\n    case keys.t:\n      gameState.borderTeleport = !gameState.borderTeleport;\n      gameState.borderBounce = !gameState.borderTeleport; break;\n    case keys.z:\n      zeroTotalMomentumAndPosition(); break;\n    case keys.a:\n      addBlob(); break;\n    default:\n  }\n  if (player) player.updatePlayerForce();\n}\n\nwindow.keyPress = function (e) {\n  switch (e.keyCode) {\n    case keys.space:\n      if (!player) {\n        createPlayer();\n        toggleInstructions();\n      } \n      break;\n    default:\n  }\n}\n\nfunction zeroTotalMomentumAndPosition() {\n  let totalMomentum = [0, 0],\n    totalCOM = [0, 0],\n    totalMass = 0,\n    allBlobs = (player) ? blobs.concat([player]) : blobs;\n  // sum momentum, COM and mass\n  for (let i = 0; i < allBlobs.length; i++) {\n    let currentMass = allBlobs[i].getMass(),\n      currentVelocity = allBlobs[i].getVel(),\n      currentPosition = allBlobs[i].getPos();\n    totalMass += currentMass;\n    totalMomentum[0] += currentVelocity[0] * currentMass;\n    totalMomentum[1] += currentVelocity[1] * currentMass;\n    totalCOM[0] += currentPosition[0] * currentMass;\n    totalCOM[1] += currentPosition[1] * currentMass;\n  }\n  let velocityShift = [-totalMomentum[0] / totalMass, -totalMomentum[1] / totalMass],\n    positionShift = [initialPos[0] - totalCOM[0] / totalMass, initialPos[1] - totalCOM[1] / totalMass];\n\n  // adjust all blobs\n  for (let i = 0; i < allBlobs.length; i++) {\n    allBlobs[i].adjustVelocityBy(velocityShift);\n    allBlobs[i].adjustPositionBy(positionShift);\n  }\n}\n\n","import './globals'\nimport start from './game'\nwindow.onload = start"],"sourceRoot":""}